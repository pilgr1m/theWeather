{"version":3,"sources":["components/appFooter/AppFooter.module.css","components/spinner/Spinner.module.css","components/error/Error.module.css","components/Forecast/ForecastContainer.module.css","components/appHeader/AppHeader.module.css","redux/weather/reducer.js","redux/reducer.js","redux/store.js","components/error/Error.js","components/errorBoundary/ErrorBoundary.js","services/OwmService.js","components/owmServiceContex/OwmServiceContex.js","images/theWeather.svg","components/appHeader/AppHeader.js","components/appFooter/AppFooter.js","components/hoc/WithOwmService.js","components/helpers/Helpers.js","components/spinner/Spinner.js","components/CurrentWeather/CurrentWeather.js","components/Forecast/CardDay.js","components/Forecast/ListDay.js","components/Forecast/ForecastContainer.js","images/search.svg","components/WeatherContainer/WeatherContainer.js","redux/weather/actions.js","App.js","index.js","components/CurrentWeather/CurrentWeather.module.css","components/WeatherContainer/WeatherContainer.module.css"],"names":["module","exports","initialState","dataWeather","dataForecast","unit","city","error","loading","weatherReducer","state","action","type","payload","lat","lon","combineReducers","weather","store","createStore","reducer","Error","className","style","ErrorBoundary","this","setState","props","children","React","Component","OwmService","_baseUrl","url","a","fetch","response","ok","status","json","apikey","getResources","OwmServiceContex","createContext","AppHeader","appHeader","src","logo","alt","AppFooter","appFooter","href","footerLink","target","rel","WithOwmService","Wrapped","Consumer","getNameMonth","month","getNameDay","convertTemp","unitName","value","Math","round","convertWind","toFixed","formatDate","data","hour","timezone","timezone_offset","date","Date","minutes","getMinutes","hours","getHours","dayMonth","getDate","dayWeek","getDay","getMonth","forecast","toUpperCase","getSrc","folder","cod","process","srcDn","Spinner","spinnerWrapper","blockspin","spinner","CurrentWeather","wrapper","left","dt","name","sys","country","feelsLike","main","feels_like","wph","wind","speed","pressure","humidity","descr","map","el","description","id","tempDegrees","temp","icon","CardDay","isOpenCard","closeCard","daily","createDivTempTime","time","tempValue","medi","semi","cardWrapper","cardTitle","cardDescr","index","tempDescr","max","min","cardWph","wind_speed","tempForTime","morn","day","eve","iconCard","close","onClick","createCardDay","ListDay","clickDay","days","title","dayList","dayWrapper","dayDate","iconMini","ForecastContainer","useState","setIsOpenCard","setId","wrapperForecast","mapDispatchToProps","dataReceivedWeather","newData","dataError","newError","dataLoading","newLoading","setCity","newCity","dataReceivedForecast","connect","setUnitName","createInput","divRadio","radio","checked","onChange","e","label","htmlFor","weatherForm","onSubmit","event","preventDefault","length","uriEncodedCity","encodeURIComponent","API_KEY","getCurrentWeather","then","getForecast8Days","catch","console","log","fetchForecast","getForecast","coord","fetchWeather","inputWrapper","placeholder","maxLength","search","buttonSubmit","wrapperRadio","App","ownService","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5acc2565.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appFooter\":\"AppFooter_appFooter__1rkaN\",\"footerLink\":\"AppFooter_footerLink__iUDII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1KrPx\",\"blockspin\":\"Spinner_blockspin__x4syY\",\"loading\":\"Spinner_loading__LWV62\",\"spinner\":\"Spinner_spinner__26pVQ\",\"spin\":\"Spinner_spin__17_HY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__1EfO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperForecast\":\"ForecastContainer_wrapperForecast__2gXVW\",\"title\":\"ForecastContainer_title__avUwa\",\"dayList\":\"ForecastContainer_dayList__17fbW\",\"dayWrapper\":\"ForecastContainer_dayWrapper__2v8VC\",\"day\":\"ForecastContainer_day__3nxtH\",\"dayDate\":\"ForecastContainer_dayDate__Hg4Fg\",\"iconMini\":\"ForecastContainer_iconMini__1G3dY\",\"cardWrapper\":\"ForecastContainer_cardWrapper__3psWP\",\"cardTitle\":\"ForecastContainer_cardTitle__3Yoo2\",\"cardDescr\":\"ForecastContainer_cardDescr__k2VPZ\",\"tempDescr\":\"ForecastContainer_tempDescr__2PBsk\",\"cardWph\":\"ForecastContainer_cardWph__36tNZ\",\"tempForTime\":\"ForecastContainer_tempForTime__3uwzt\",\"time\":\"ForecastContainer_time__1UxOs\",\"medi\":\"ForecastContainer_medi__Tbd2W\",\"semi\":\"ForecastContainer_semi__3GegV\",\"iconCard\":\"ForecastContainer_iconCard__2FNZr\",\"close\":\"ForecastContainer_close__1358J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"AppHeader_appHeader__2A-pl\"};","const initialState = {\r\n    dataWeather: {},\r\n    dataForecast: {},\r\n    unit: \"metric\",\r\n    city: \"\",\r\n    error: false,\r\n    loading: false,\r\n}\r\n\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"DATA_RECEIVED_WEATHER\":\r\n            return {\r\n                ...state, dataWeather: action.payload\r\n            }\r\n        case \"DATA_RECEIVED_FORECAST\":\r\n            return {\r\n                ...state, dataForecast: action.payload\r\n            }\r\n        // case \"ADD_CARD_DAY_FORECAST\":\r\n        //     const id = action.id\r\n        //     const item = state.menu.find(item => item.id === id)\r\n        //     const newItem = {\r\n        //         title: item.title,\r\n        //         url: item.url,\r\n        //         // etc...\r\n        //     }\r\n        //     return {\r\n        //         ...state,\r\n        //         item: [\r\n        //             ...state.items,\r\n        //             newItem\r\n        //         ]\r\n        //     }\r\n        case \"DATA_ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        case \"DATA_LOADING\":\r\n            return {\r\n                ...state, loading: action.loading\r\n            }\r\n        case \"SET_CITY\":\r\n            return {\r\n                ...state, city: action.city\r\n            }\r\n        case \"SET_LAT\":\r\n            return {\r\n                ...state, lat: action.lat\r\n            }\r\n        case \"SET_LON\":\r\n            return {\r\n                ...state, lon: action.lon\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default weatherReducer","import { combineReducers } from \"redux\"\r\nimport weatherReducer from \"./weather/reducer\"\r\n\r\nexport default combineReducers({\r\n    weather: weatherReducer,\r\n})","import { createStore } from \"redux\"\r\nimport reducer from \"./reducer\"\r\n\r\nconst store = createStore(reducer)\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport style from \"./Error.module.css\"\r\n\r\nconst Error = () => {\r\n\r\n    return (\r\n        <small className={style.error}>Error...Please enter a valid city.</small>\r\n    )\r\n}\r\nexport default Error","import React from 'react'\r\nimport Error from \"../error/Error\"\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <Error />\r\n        }\r\n        return this.props.children\r\n    }\r\n}","export default class OwmService {\r\n    constructor() {\r\n        this._baseUrl = \"https://api.openweathermap.org\"\r\n    }\r\n    //main func fetch\r\n    async getResources(url) {\r\n        const response = await fetch(`${this._baseUrl}${url}`)\r\n        // console.log(`${this._baseUrl}${url}`)\r\n        if (!response.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${response.status}`)\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n    //get weather\r\n    getCurrentWeather(unit, city, apikey) {\r\n        return this.getResources(`/data/2.5/weather?&units=${unit}&q=${city}&appid=${apikey}`)\r\n    }\r\n\r\n    //forecast 8-days\r\n    getForecast8Days(unit, lat, lon, apikey) {\r\n        return this.getResources(`/data/2.5/onecall?lat=${lat}&lon=${lon}&units=${unit}&exclude=current,minutely,hourly&appid=${apikey}`)\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nconst OwmServiceContex = React.createContext()\r\nexport default OwmServiceContex","export default __webpack_public_path__ + \"static/media/theWeather.ceb83871.svg\";","import React from 'react'\r\nimport style from \"./AppHeader.module.css\"\r\nimport logo from \"../../images/theWeather.svg\"\r\n\r\nconst AppHeader = () => {\r\n\treturn (\r\n\t\t<header className={style.appHeader}>\r\n\t\t\t<img src={logo} alt=\"logo\" />\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\nexport default AppHeader","import React from 'react'\r\nimport style from \"./AppFooter.module.css\"\r\n\r\nconst AppFooter = () => {\r\n    return (\r\n        <footer className={style.appFooter}>\r\n            app by <a href=\"https://www.linkedin.com/in/vanja-volokha/\" className={style.footerLink} target=\"_blank\" rel=\"noreferrer\"> Ivan Volokha</a>  ·  2021  ·  design by <a href=\"https://www.linkedin.com/in/dasha-volokha/\" className={style.footerLink} target=\"_blank\" rel=\"noreferrer\"> Daria Volokha </a>\r\n        </footer>\r\n    )\r\n}\r\nexport default AppFooter","import React from 'react'\r\nimport OwmServiceContex from \"../owmServiceContex/OwmServiceContex\"\r\n\r\nconst WithOwmService = () => {\r\n    return (Wrapped) => {\r\n        return (props) => {\r\n            return (\r\n                <OwmServiceContex.Consumer>\r\n                    { (OwmService) => {\r\n                        return <Wrapped {...props} OwmService={OwmService} />\r\n                    }}\r\n                </OwmServiceContex.Consumer>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default WithOwmService\r\n\r\n\r\n","function getNameMonth(month) {\r\n\tswitch (month) {\r\n\t\tcase 0: return \"Jan\"\r\n\t\tcase 1: return \"Feb\"\r\n\t\tcase 2: return \"Mar\"\r\n\t\tcase 3: return \"Apr\"\r\n\t\tcase 4: return \"May\"\r\n\t\tcase 5: return \"Jun\"\r\n\t\tcase 6: return \"Jul\"\r\n\t\tcase 7: return \"Aug\"\r\n\t\tcase 8: return \"Sep\"\r\n\t\tcase 9: return \"Oct\"\r\n\t\tcase 10: return \"Nov\"\r\n\t\tcase 11: return \"Dec\"\r\n\t\tdefault: return \"Month\"\r\n\t}\r\n}\r\nfunction getNameDay(month) {\r\n\tswitch (month) {\r\n\t\tcase 0: return \"Sun\"\r\n\t\tcase 1: return \"Mon\"\r\n\t\tcase 2: return \"Tue\"\r\n\t\tcase 3: return \"Wed\"\r\n\t\tcase 4: return \"Thu\"\r\n\t\tcase 5: return \"Fri\"\r\n\t\tcase 6: return \"Sat\"\r\n\t\tdefault: return \"Day\"\r\n\t}\r\n}\r\n\r\nfunction convertTemp(unitName, value) {\r\n\treturn (unitName === \"metric\")\r\n\t\t? `${Math.round(value)}°C`\r\n\t\t: `${Math.round(((value) * 1.8) + 32)}°F`\r\n}\r\nfunction convertWind(unitName, value) {\r\n\treturn (unitName === \"metric\")\r\n\t\t? `${value}m/s `\r\n\t\t: `${(value * 2.237).toFixed(1)}mph `\r\n}\r\n\r\nfunction formatDate(value, data, hour = false) {\r\n\tconst timezone = data.timezone_offset\r\n\t\t? (data.timezone_offset - 7200)\r\n\t\t: (data.timezone - 7200)\r\n\tconst date = new Date((value + timezone) * 1000);\r\n\tconst minutes = date.getMinutes();\r\n\tconst hours = date.getHours();\r\n\tconst dayMonth = date.getDate();\r\n\tconst dayWeek = date.getDay();\r\n\tconst month = date.getMonth();\r\n\r\n\tconst weather = `${getNameDay(dayWeek)} • ${hours}:${minutes <= 9 ? `0${minutes}` : minutes}${hours >= 11 ? \"pm\" : \"am\"}, ${getNameMonth(month)} ${dayMonth}`\r\n\r\n\tconst forecast = `${getNameDay(dayWeek).toUpperCase()}, ${getNameMonth(month)} ${dayMonth}`\r\n\r\n\treturn hour ? weather : forecast;\r\n}\r\n\r\nfunction getSrc(folder, cod) {\r\n\tlet src = `${process.env.PUBLIC_URL}/images/${folder}/${cod}.png`\r\n\tlet srcDn = `${process.env.PUBLIC_URL}/images/${folder}/`\r\n\r\n\tswitch (cod) {\r\n\t\tcase \"01d\":\r\n\t\tcase \"01n\":\r\n\t\tcase \"02d\":\r\n\t\tcase \"02n\": return src\r\n\t\tcase \"03d\":\r\n\t\tcase \"03n\": return `${srcDn}03dn.png`\r\n\t\tcase \"04d\":\r\n\t\tcase \"04n\": return `${srcDn}04dn.png`\r\n\t\tcase \"09d\":\r\n\t\tcase \"09n\": return `${srcDn}09dn.png`\r\n\t\tcase \"10d\":\r\n\t\tcase \"10n\": return src\r\n\t\tcase \"11d\":\r\n\t\tcase \"11n\": return `${srcDn}11dn.png`\r\n\t\tcase \"13d\":\r\n\t\tcase \"13n\": return `${srcDn}13dn.png`\r\n\t\tcase \"50d\":\r\n\t\tcase \"50n\": return src\r\n\t\tdefault: return null\r\n\t}\r\n}\r\n\r\n\r\nexport {\r\n\tgetNameMonth, getNameDay,\r\n\tconvertTemp, convertWind,\r\n\tformatDate, getSrc\r\n\r\n}","import React from 'react'\r\nimport style from \"./Spinner.module.css\"\r\n\r\nconst Spinner = () => {\r\n\r\n    return (\r\n        <div className={style.spinnerWrapper}>\r\n            <div className={style.blockspin}>\r\n                <div className={style.spinner}></div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner","import React from 'react'\r\nimport { convertTemp, convertWind, formatDate, getSrc } from \"../helpers/Helpers\"\r\nimport Error from \"../error/Error\"\r\nimport Spinner from \"../spinner/Spinner\"\r\n\r\nimport style from \"./CurrentWeather.module.css\"\r\n\r\n\r\nconst CurrentWeather = ({ error, loading, dataWeather, unitName }) => {\r\n    return (\r\n        <>\r\n            {error && <Error />}\r\n\r\n            {loading && <Spinner />}\r\n\r\n            {dataWeather.cod === 200\r\n                ? <div className={style.wrapper}>\r\n                    <div className={style.left}>\r\n                        <div className={style.date}> {formatDate(dataWeather.dt, dataWeather, true)} </div>\r\n\r\n                        <div className={style.city}> {dataWeather.name}, {dataWeather.sys.country} </div>\r\n\r\n                        <div className={style.feelsLike}>Feels like {convertTemp(unitName, dataWeather.main.feels_like)}\r\n                        </div>\r\n\r\n                        <div className={style.wph}>\r\n                            <div>\r\n                                Wind: {convertWind(unitName, dataWeather.wind.speed)}\r\n                            </div>\r\n                            <div>Pressure: {dataWeather.main.pressure}hPa </div>\r\n                            <div>Humidity: {dataWeather.main.humidity}% </div>\r\n                        </div>\r\n                        <div className={style.descr}>{dataWeather.weather.map(el => <span key={el.id}>{el.description.toUpperCase()} </span>)}</div>\r\n\r\n                    </div>\r\n\r\n                    <div className={style.tempDegrees}> {convertTemp(unitName, dataWeather.main.temp)}\r\n                    </div>\r\n\r\n                    <img\r\n                        className={style.icon}\r\n                        src={getSrc(\"icons\", dataWeather.weather[0].icon)}\r\n                        alt=\"iconWeather\" />\r\n\r\n\r\n                </div>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default CurrentWeather\r\n","import React from 'react'\r\nimport { convertTemp, convertWind, formatDate, getSrc } from \"../helpers/Helpers\"\r\n\r\nimport style from \"./ForecastContainer.module.css\"\r\n\r\n\r\nconst CardDay = ({ id, unitName, dataForecast,\r\n    isOpenCard, closeCard }) => {\r\n    let { daily } = dataForecast\r\n\r\n    function createCardDay(id) {\r\n        return (\r\n            <div className={style.cardWrapper}>\r\n                <h2 className={style.cardTitle}>\r\n                    {formatDate(daily[id].dt, dataForecast)}\r\n                </h2>\r\n\r\n                <h4 className={style.cardDescr}>\r\n                    {daily[id].weather.map((el, index) => {\r\n                        return <span key={index}>\r\n                            {(`${el.main}. ${el.description}`).toUpperCase()}\r\n                        </span>\r\n                    })}\r\n                </h4>\r\n\r\n                <div className={style.tempDescr}>\r\n                    The high will be {convertTemp(unitName, daily[id].temp.max)}, the low will be {convertTemp(unitName, daily[id].temp.min)}\r\n                </div>\r\n\r\n                <div className={style.cardWph}>\r\n                    <div> Wind: {convertWind(unitName, daily[id].wind_speed)}\r\n                    </div>\r\n                    <div> Pressure: {daily[id].pressure}hPa </div>\r\n                    <div> Humidity: {daily[id].humidity}% </div>\r\n                </div>\r\n\r\n                <div className={style.tempForTime}>\r\n                    {createDivTempTime(\"MORNING\", daily[id].temp.morn, daily[id].feels_like.morn)}\r\n                    {createDivTempTime(\"AFTERNOON\", daily[id].temp.day, daily[id].feels_like.day)}\r\n                    {createDivTempTime(\"EVENING\", daily[id].temp.eve, daily[id].feels_like.eve)}\r\n                </div>\r\n\r\n                <img\r\n                    className={style.iconCard}\r\n                    src={getSrc(\"card-icons\", daily[id].weather[0].icon)}\r\n                    alt=\"cardIcon\" />\r\n\r\n                <button\r\n                    className={style.close}\r\n                    onClick={() => closeCard()} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function createDivTempTime(time, tempValue, feelsLike) {\r\n        return (\r\n            <div className={style.time}>\r\n                <div className={style.medi}> {time} </div>\r\n                <div className={style.semi}> {convertTemp(unitName, tempValue)} </div>\r\n                <span> feels like </span>\r\n                <div className={style.semi}> {convertTemp(unitName, feelsLike)} </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            { isOpenCard\r\n                ? <>\r\n                    {createCardDay(id)}\r\n                </>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default CardDay","import React from 'react'\r\nimport { convertTemp, formatDate, getSrc } from \"../helpers/Helpers\"\r\n\r\nimport style from \"./ForecastContainer.module.css\"\r\n\r\n\r\nconst ListDay = ({ clickDay, unitName, dataForecast }) => {\r\n\tlet days = dataForecast.daily\r\n\r\n\tfunction dayList() {\r\n\t\treturn days.map((day, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tonClick={() => clickDay(index)}\r\n\t\t\t\t\tkey={day.dt}\r\n\t\t\t\t\tclassName={style.dayWrapper}>\r\n\r\n\t\t\t\t\t<div className={style.day}>\r\n\t\t\t\t\t\t<span className={style.dayDate}> {formatDate(day.dt, dataForecast)}  </span>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName={style.iconMini}\r\n\t\t\t\t\t\t\t\tsrc={getSrc(\"mini-icons\", day.weather[0].icon)}\r\n\t\t\t\t\t\t\t\talt=\"iconMini\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{convertTemp(unitName, day.temp.day)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataForecast.daily\r\n\t\t\t\t? <>\r\n\t\t\t\t\t<h2 className={style.title}>8-day Forecast </h2>\r\n\t\t\t\t\t<div className={style.dayList}>\r\n\t\t\t\t\t\t{dayList()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default ListDay","import React, { useState } from 'react'\r\nimport CardDay from \"./CardDay\"\r\nimport ListDay from \"./ListDay\"\r\n\r\nimport style from \"./ForecastContainer.module.css\"\r\n\r\n\r\nconst ForecastContainer = ({ dataForecast, unitName }) => {\r\n\tlet [isOpenCard, setIsOpenCard] = useState(false)\r\n\tlet [id, setId] = useState(null)\r\n\r\n\tfunction clickDay(id) {\r\n\t\tsetIsOpenCard(true)\r\n\t\tsetId(id)\r\n\t}\r\n\r\n\tfunction closeCard() {\r\n\t\tsetIsOpenCard(false)\r\n\t\tsetId(null)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.wrapperForecast}>\r\n\r\n\t\t\t<ListDay\r\n\t\t\t\tid={id}\r\n\t\t\t\tdataForecast={dataForecast}\r\n\t\t\t\tunitName={unitName}\r\n\t\t\t\tclickDay={clickDay} />\r\n\r\n\t\t\t<CardDay\r\n\t\t\t\tid={id}\r\n\t\t\t\tdataForecast={dataForecast}\r\n\t\t\t\tunitName={unitName}\r\n\t\t\t\tisOpenCard={isOpenCard}\r\n\t\t\t\tcloseCard={closeCard} />\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ForecastContainer\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/search.595d4dfb.svg\";","import React, { useState } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport WithOwmService from \"../hoc/WithOwmService\"\r\nimport {\r\n    dataReceivedWeather, dataError, dataLoading,\r\n    setCity, dataReceivedForecast\r\n} from \"../../redux/weather/actions\"\r\n\r\nimport CurrentWeather from \"../CurrentWeather/CurrentWeather\"\r\nimport ForecastContainer from \"../Forecast/ForecastContainer\"\r\n\r\nimport style from \"./WeatherContainer.module.css\"\r\nimport search from \"../../images/search.svg\"\r\n\r\n\r\nconst WeatherContainer = (props) => {\r\n    let { OwmService, dataReceivedWeather, dataError,\r\n        dataLoading, setCity, dataReceivedForecast,\r\n        dataWeather, dataForecast, city, unit, error, loading } = props\r\n\r\n    const [unitName, setUnitName] = useState(unit)\r\n\r\n    function getWeather(event) {\r\n        event.preventDefault()\r\n        if (city.length === 0) {\r\n            dataReceivedWeather({})\r\n            return dataError(true)\r\n        }\r\n        dataError(false)\r\n        dataLoading(true)\r\n\r\n        fetchWeather()\r\n        setCity(\"\")\r\n    }\r\n\r\n    function fetchWeather() {\r\n        //changer for \"wrong\" symbols\r\n        const uriEncodedCity = encodeURIComponent(city)\r\n        //for save your APIkey\r\n        const API_KEY = process.env.REACT_APP_API_KEY\r\n\r\n        OwmService.getCurrentWeather(unit, uriEncodedCity, API_KEY)\r\n            .then((response) => {\r\n                if (response.cod !== 200) {\r\n                    throw new Error()\r\n                }\r\n                dataReceivedWeather(response)\r\n                getForecast(response.coord.lat, response.coord.lon)\r\n                dataLoading(false)\r\n                dataError(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dataLoading(false)\r\n                dataError(true)\r\n            })\r\n    }\r\n\r\n    function fetchForecast(unit, lat, lon) {\r\n        const API_KEY = process.env.REACT_APP_API_KEY\r\n        OwmService.getForecast8Days(unit, lat, lon, API_KEY)\r\n            .then(response => {\r\n                dataReceivedForecast(response)\r\n                dataLoading(false)\r\n            })\r\n            .catch(error => {\r\n                dataError(true)\r\n                dataLoading(false)\r\n                console.log(error.status)\r\n            })\r\n    }\r\n\r\n    function getForecast(lat, lon) {\r\n        if (!lat && !lon) {\r\n            dataReceivedForecast({})\r\n            return dataError(true)\r\n        }\r\n        dataError(false)\r\n        dataLoading(true)\r\n\r\n        fetchForecast(unit, lat, lon)\r\n    }\r\n\r\n    function createInput(name, title) {\r\n        return (\r\n            <div className={style.divRadio}>\r\n                <input\r\n                    className={style.radio}\r\n                    type=\"radio\"\r\n                    name=\"units\"\r\n                    checked={unitName === name}\r\n                    value={name}\r\n                    id={name}\r\n                    onChange={(e) => setUnitName(e.target.value)} />\r\n                <label className={style.label} htmlFor={name}> <span> {title} </span> </label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={style.weatherForm} onSubmit={getWeather}>\r\n                <div className={style.inputWrapper}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search City\"\r\n                        maxLength=\"50\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                    <img src={search} alt=\"search\" />\r\n                </div>\r\n\r\n                <button className={style.buttonSubmit} type=\"submit\">Search</button>\r\n\r\n                <div className={style.wrapperRadio}>\r\n                    {createInput(\"metric\", \"°C\")}\r\n                    {createInput(\"imperial\", \"°F\")}\r\n                </div>\r\n            </form>\r\n\r\n            <CurrentWeather\r\n                dataWeather={dataWeather}\r\n                unitName={unitName}\r\n                loading={loading}\r\n                error={error} />\r\n            <ForecastContainer\r\n                dataForecast={dataForecast}\r\n                unitName={unitName} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.weather,\r\n        dataWeather: state.weather.dataWeather,\r\n        dataForecast: state.weather.dataForecast,\r\n        city: state.weather.city,\r\n        unit: state.weather.unit,\r\n        error: state.weather.error,\r\n        loading: state.weather.loading,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dataReceivedWeather, dataError, dataLoading,\r\n    setCity, dataReceivedForecast\r\n}\r\n\r\nexport default WithOwmService()(connect(mapStateToProps, mapDispatchToProps)(WeatherContainer))\r\n","const dataReceivedWeather = (newData) => {\r\n    return {\r\n        type: \"DATA_RECEIVED_WEATHER\",\r\n        payload: newData\r\n    }\r\n}\r\nconst dataError = (newError) => {\r\n    return {\r\n        type: \"DATA_ERROR\",\r\n        error: newError\r\n    }\r\n}\r\nconst dataLoading = (newLoading) => {\r\n    return {\r\n        type: \"DATA_LOADING\",\r\n        loading: newLoading\r\n\r\n    }\r\n}\r\nconst setCity = (newCity) => {\r\n    return {\r\n        type: \"SET_CITY\",\r\n        city: newCity\r\n    }\r\n}\r\n\r\nconst dataReceivedForecast = (newData) => {\r\n    return {\r\n        type: \"DATA_RECEIVED_FORECAST\",\r\n        payload: newData\r\n    }\r\n\r\n}\r\n// const addCardDayForecast = (newId) => {\r\n//     return {\r\n//         type: \"ADD_CARD_DAY_FORECAST\",\r\n//         id: newId\r\n//     }\r\n// }\r\n\r\nexport {\r\n    dataReceivedWeather, dataError, dataLoading,\r\n    setCity, dataReceivedForecast,\r\n    //  addCardDayForecast\r\n}","import React from 'react'\nimport AppHeader from \"./components/appHeader/AppHeader\"\nimport AppFooter from \"./components/appFooter/AppFooter\"\nimport WeatherContainer from \"./components/WeatherContainer/WeatherContainer\"\n\nimport \"./App.css\"\n\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"mainWrapper\">\n\t\t\t<AppHeader />\n\n\t\t\t<WeatherContainer />\n\n\t\t\t<AppFooter />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\"\n\nimport ErrorBoundary from \"./components/errorBoundary/ErrorBoundary\"\nimport OwmService from \"./services/OwmService\"\nimport OwmServiceContex from \"./components/owmServiceContex/OwmServiceContex\"\n\nimport App from \"./App\";\nimport \"./index.css\";\n\n\nconst ownService = new OwmService()\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<OwmServiceContex.Provider value={ownService}>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<App />\n\t\t\t\t\t</Router>\n\t\t\t\t</OwmServiceContex.Provider>\n\t\t\t</ErrorBoundary>\n\t\t</Provider>\n\n\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CurrentWeather_wrapper__sH8YV\",\"left\":\"CurrentWeather_left__3p-iB\",\"date\":\"CurrentWeather_date__310GM\",\"city\":\"CurrentWeather_city__3UXhO\",\"feelsLike\":\"CurrentWeather_feelsLike__2UeCV\",\"wph\":\"CurrentWeather_wph__3q-vN\",\"descr\":\"CurrentWeather_descr__2aAq-\",\"tempDegrees\":\"CurrentWeather_tempDegrees__2E0Qr\",\"icon\":\"CurrentWeather_icon__3iz35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherForm\":\"WeatherContainer_weatherForm__1f4kg\",\"inputWrapper\":\"WeatherContainer_inputWrapper__X02yx\",\"buttonSubmit\":\"WeatherContainer_buttonSubmit__vThW6\",\"wrapperRadio\":\"WeatherContainer_wrapperRadio__1FRc5\",\"divRadio\":\"WeatherContainer_divRadio__1vFLF\"};"],"sourceRoot":""}