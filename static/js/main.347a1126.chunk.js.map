{"version":3,"sources":["components/AppFooter/AppFooter.module.css","components/spinner/Spinner.module.css","components/AppHeader/AppHeader.module.css","components/error/Error.module.css","components/Forecast/ForecastContainer.module.css","images/theWeather.svg","components/AppHeader/AppHeader.js","components/AppFooter/AppFooter.js","components/error/Error.js","components/spinner/Spinner.js","components/helpers/Helpers.js","components/CurrentWeather/CurrentWeather.js","components/Forecast/CardDay.js","components/Forecast/ListDay.js","components/Forecast/ForecastContainer.js","components/owmServiceContex/OwmServiceContex.js","components/hoc/WithOwmService.js","images/search.svg","components/WeatherContainer/WeatherContainer.js","redux/weather/actions.js","App.js","components/errorBoundary/ErrorBoundary.js","services/OwmService.js","redux/weather/reducer.js","redux/reducer.js","redux/store.js","index.js","components/CurrentWeather/CurrentWeather.module.css","components/WeatherContainer/WeatherContainer.module.css"],"names":["module","exports","AppHeader","className","style","appHeader","src","logo","alt","AppFooter","appFooter","href","footerLink","target","rel","Error","error","Spinner","spinnerWrapper","blockspin","spinner","getNameMonth","month","getNameDay","convertTemp","unitName","value","Math","round","convertWind","toFixed","formatDate","data","hour","timezone","timezone_offset","date","Date","minutes","getMinutes","hours","getHours","dayMonth","getDate","dayWeek","getDay","getMonth","weather","forecast","toUpperCase","getSrc","folder","cod","process","srcDn","CurrentWeather","loading","dataWeather","wrapper","left","dt","city","name","sys","country","feelsLike","main","feels_like","wph","wind","speed","pressure","humidity","descr","map","el","description","id","right","tempDegrees","temp","icon","CardDay","dataForecast","isOpenCard","closeCard","daily","createDivTempTime","time","tempValue","medi","semi","cardWrapper","cardTitle","cardDescr","index","tempDescr","max","min","cardWph","wind_speed","tempForTime","morn","day","eve","iconCard","close","onClick","createCardDay","ListDay","clickDay","days","title","dayList","dayWrapper","dayDate","iconMini","ForecastContainer","useState","setIsOpenCard","setId","wrapperForecast","OwmServiceContex","React","createContext","WithOwmService","Wrapped","props","Consumer","OwmService","mapDispatchToProps","dataReceivedWeather","newData","type","payload","dataError","newError","dataLoading","newLoading","setCity","newCity","dataReceivedForecast","connect","state","unit","setUnitName","a","uriEncodedCity","encodeURIComponent","getCurrentWeather","then","response","getForecast","coord","lat","lon","catch","console","log","getForecast8Days","status","fetchForecast","createInput","divRadio","radio","checked","onChange","e","label","htmlFor","weatherForm","onSubmit","event","preventDefault","length","fetchWeather","inputWrapper","placeholder","maxLength","search","buttonSubmit","wrapperRadio","App","ErrorBoundary","this","setState","children","Component","_baseUrl","url","fetch","ok","json","apikey","getResources","initialState","weatherReducer","action","combineReducers","store","createStore","reducer","ownService","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.347a1126.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appFooter\":\"AppFooter_appFooter__2pG09\",\"footerLink\":\"AppFooter_footerLink__1-wUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1Q2gt\",\"blockspin\":\"Spinner_blockspin__2vs3V\",\"loading\":\"Spinner_loading__1H6FG\",\"spinner\":\"Spinner_spinner__1thM_\",\"spin\":\"Spinner_spin__71haK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appHeader\":\"AppHeader_appHeader__1NEYY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2iTnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperForecast\":\"ForecastContainer_wrapperForecast__plIm6\",\"title\":\"ForecastContainer_title__3j-XY\",\"dayList\":\"ForecastContainer_dayList__1UUy0\",\"dayWrapper\":\"ForecastContainer_dayWrapper__3lxkO\",\"day\":\"ForecastContainer_day__3XhiU\",\"dayDate\":\"ForecastContainer_dayDate__1F36j\",\"iconMini\":\"ForecastContainer_iconMini__4Vq-o\",\"cardWrapper\":\"ForecastContainer_cardWrapper__1iQcV\",\"cardTitle\":\"ForecastContainer_cardTitle__2YewU\",\"cardDescr\":\"ForecastContainer_cardDescr__2wUpA\",\"tempDescr\":\"ForecastContainer_tempDescr__3Vwrm\",\"cardWph\":\"ForecastContainer_cardWph__3loj0\",\"tempForTime\":\"ForecastContainer_tempForTime__eH8Kd\",\"time\":\"ForecastContainer_time__2XpmA\",\"medi\":\"ForecastContainer_medi__3IE4j\",\"semi\":\"ForecastContainer_semi__1a8V4\",\"iconCard\":\"ForecastContainer_iconCard__MrNGi\",\"close\":\"ForecastContainer_close__3CphW\"};","export default __webpack_public_path__ + \"static/media/theWeather.ceb83871.svg\";","import React from 'react'\r\nimport style from \"./AppHeader.module.css\"\r\nimport logo from \"../../images/theWeather.svg\"\r\n\r\nconst AppHeader = () => {\r\n\r\n\treturn (\r\n\t\t<header className={style.appHeader}>\r\n\t\t\t<img src={logo} alt=\"the Weathe. logo\" />\r\n\r\n\t\t</header>\r\n\r\n\t)\r\n}\r\nexport default AppHeader","import React from 'react'\r\nimport style from \"./AppFooter.module.css\"\r\n\r\nconst AppFooter = () => {\r\n    return (\r\n        <footer className={style.appFooter}>\r\n            app by <a href=\"https://www.linkedin.com/in/vanja-volokha/\" className={style.footerLink} target=\"_blank\" rel=\"noreferrer\"> Ivan Volokha</a>  ·  2021  ·  design by <a href=\"https://www.linkedin.com/in/dasha-volokha/\" className={style.footerLink} target=\"_blank\" rel=\"noreferrer\"> Daria Volokha </a>\r\n        </footer>\r\n    )\r\n}\r\nexport default AppFooter","import React from 'react'\r\nimport style from \"./Error.module.css\"\r\n\r\nconst Error = () => {\r\n\r\n    return (\r\n        <small className={style.error}>Error...Please enter a valid city.</small>\r\n    )\r\n}\r\nexport default Error","import React from 'react'\r\nimport style from \"./Spinner.module.css\"\r\n\r\nconst Spinner = () => {\r\n\r\n    return (\r\n        <div className={style.spinnerWrapper}>\r\n            <div className={style.blockspin}>\r\n                {/* <span className={style.loading}>Loading...</span> */}\r\n                <div className={style.spinner}></div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner","function getNameMonth(month) {\r\n\tswitch (month) {\r\n\t\tcase 0: return \"Jan\"\r\n\t\tcase 1: return \"Feb\"\r\n\t\tcase 2: return \"Mar\"\r\n\t\tcase 3: return \"Apr\"\r\n\t\tcase 4: return \"May\"\r\n\t\tcase 5: return \"Jun\"\r\n\t\tcase 6: return \"Jul\"\r\n\t\tcase 7: return \"Aug\"\r\n\t\tcase 8: return \"Sep\"\r\n\t\tcase 9: return \"Oct\"\r\n\t\tcase 10: return \"Nov\"\r\n\t\tcase 11: return \"Dec\"\r\n\t\tdefault: return \"Month\"\r\n\t}\r\n}\r\nfunction getNameDay(month) {\r\n\tswitch (month) {\r\n\t\tcase 0: return \"Sun\"\r\n\t\tcase 1: return \"Mon\"\r\n\t\tcase 2: return \"Tue\"\r\n\t\tcase 3: return \"Wed\"\r\n\t\tcase 4: return \"Thu\"\r\n\t\tcase 5: return \"Fri\"\r\n\t\tcase 6: return \"Sat\"\r\n\t\tdefault: return \"Day\"\r\n\t}\r\n}\r\n\r\nfunction convertTemp(unitName, value) {\r\n\treturn (unitName === \"metric\")\r\n\t\t? `${Math.round(value)}°C`\r\n\t\t: `${Math.round(((value) * 1.8) + 32)}°F`\r\n}\r\nfunction convertWind(unitName, value) {\r\n\treturn (unitName === \"metric\")\r\n\t\t? `${value}m/s `\r\n\t\t: `${(value * 2.237).toFixed(1)}mph `\r\n}\r\n\r\nfunction formatDate(value, data, hour = false) {\r\n\tconst timezone = data.timezone_offset\r\n\t\t? (data.timezone_offset - 7200)\r\n\t\t: (data.timezone - 7200)\r\n\tconst date = new Date((value + timezone) * 1000);\r\n\tconst minutes = date.getMinutes();\r\n\tconst hours = date.getHours();\r\n\tconst dayMonth = date.getDate();\r\n\tconst dayWeek = date.getDay();\r\n\tconst month = date.getMonth();\r\n\r\n\tconst weather = `${getNameDay(dayWeek)} • ${hours}:${minutes <= 9 ? `0${minutes}` : minutes}${hours >= 11 ? \"pm\" : \"am\"}, ${getNameMonth(month)} ${dayMonth}`\r\n\r\n\tconst forecast = `${getNameDay(dayWeek).toUpperCase()}, ${getNameMonth(month)} ${dayMonth}`\r\n\r\n\treturn hour ? weather : forecast;\r\n}\r\n\r\nfunction getSrc(folder, cod) {\r\n\tlet src = `${process.env.PUBLIC_URL}/images/${folder}/${cod}.png`\r\n\tlet srcDn = `${process.env.PUBLIC_URL}/images/${folder}/`\r\n\r\n\tswitch (cod) {\r\n\t\tcase \"01d\":\r\n\t\tcase \"01n\":\r\n\t\tcase \"02d\":\r\n\t\tcase \"02n\": return src\r\n\t\tcase \"03d\":\r\n\t\tcase \"03n\": return `${srcDn}03dn.png`\r\n\t\tcase \"04d\":\r\n\t\tcase \"04n\": return `${srcDn}04dn.png`\r\n\t\tcase \"09d\":\r\n\t\tcase \"09n\": return `${srcDn}09dn.png`\r\n\t\tcase \"10d\":\r\n\t\tcase \"10n\": return src\r\n\t\tcase \"11d\":\r\n\t\tcase \"11n\": return `${srcDn}11dn.png`\r\n\t\tcase \"13d\":\r\n\t\tcase \"13n\": return `${srcDn}13dn.png`\r\n\t\tcase \"50d\":\r\n\t\tcase \"50n\": return src\r\n\t\tdefault: return null\r\n\t}\r\n}\r\n\r\n\r\nexport {\r\n\tgetNameMonth, getNameDay,\r\n\tconvertTemp, convertWind,\r\n\tformatDate, getSrc\r\n\r\n}","import React from 'react'\r\nimport Error from \"../error/Error\"\r\nimport Spinner from \"../spinner/Spinner\"\r\nimport { convertTemp, convertWind, formatDate, getSrc } from \"../helpers/Helpers\"\r\n\r\nimport style from \"./CurrentWeather.module.css\"\r\n\r\n\r\nconst CurrentWeather = ({ error, loading, dataWeather, unitName }) => {\r\n    // console.log(dataWeather)\r\n\r\n    return (\r\n        <div>\r\n            {error && <Error />}\r\n\r\n            {loading && <Spinner />}\r\n\r\n            {dataWeather.cod === 200\r\n                ? <div className={style.wrapper}>\r\n                    <div className={style.left}>\r\n                        <div className={style.date}> {formatDate(dataWeather.dt, dataWeather, true)} </div>\r\n\r\n                        <div className={style.city}> {dataWeather.name}, {dataWeather.sys.country} </div>\r\n\r\n                        <div className={style.feelsLike}>Feels like {convertTemp(unitName, dataWeather.main.feels_like)}\r\n                        </div>\r\n\r\n                        <div className={style.wph}>\r\n                            <div>\r\n                                Wind: {convertWind(unitName, dataWeather.wind.speed)}\r\n                            </div>\r\n                            <div>Pressure: {dataWeather.main.pressure}hPa </div>\r\n                            <div>Humidity: {dataWeather.main.humidity}% </div>\r\n                        </div>\r\n                        <div className={style.descr}>{dataWeather.weather.map(el => <span key={el.id}>{el.description.toUpperCase()} </span>)}</div>\r\n\r\n                    </div>\r\n\r\n                    <div className={style.right}>\r\n                        <div className={style.tempDegrees}> {convertTemp(unitName, dataWeather.main.temp)}\r\n                        </div>\r\n\r\n                        <img className={style.icon} src={getSrc(\"icons\", dataWeather.weather[0].icon)} alt=\"iconWeather\" />\r\n                    </div>\r\n\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default CurrentWeather\r\n","import React from 'react'\r\nimport { convertTemp, convertWind, formatDate, getSrc } from \"../helpers/Helpers\"\r\n\r\nimport style from \"./ForecastContainer.module.css\"\r\n\r\n\r\nconst CardDay = ({ id, unitName, dataForecast, isOpenCard, closeCard }) => {\r\n    let { daily } = dataForecast\r\n\r\n\r\n    function createCardDay(id) {\r\n        return (\r\n            <div className={style.cardWrapper}>\r\n                <h2 className={style.cardTitle}>\r\n                    {formatDate(daily[id].dt, dataForecast)}\r\n                </h2>\r\n\r\n                <h4 className={style.cardDescr}>\r\n                    {daily[id].weather.map((el, index) => {\r\n                        return <span key={index}>\r\n                            {(`${el.main}. ${el.description}`).toUpperCase()}\r\n                        </span>\r\n                    })}\r\n                </h4>\r\n\r\n                <div className={style.tempDescr}>\r\n                    The high will be {convertTemp(unitName, daily[id].temp.max)}, the low will be {convertTemp(unitName, daily[id].temp.min)}.\r\n\t\t\t\t</div>\r\n\r\n                <div className={style.cardWph}>\r\n                    <div> Wind: {convertWind(unitName, daily[id].wind_speed)}\r\n                    </div>\r\n                    <div> Pressure: {daily[id].pressure}hPa </div>\r\n                    <div> Humidity: {daily[id].humidity}% </div>\r\n                </div>\r\n\r\n                <div className={style.tempForTime}>\r\n                    {createDivTempTime(\"MORNING\", daily[id].temp.morn, daily[id].feels_like.morn)}\r\n                    {createDivTempTime(\"AFTERNOON\", daily[id].temp.day, daily[id].feels_like.day)}\r\n                    {createDivTempTime(\"EVENING\", daily[id].temp.eve, daily[id].feels_like.eve)}\r\n                </div>\r\n\r\n                <img className={style.iconCard} src={getSrc(\"card-icons\", daily[id].weather[0].icon)} alt=\"cardIcon\" />\r\n\r\n                <button className={style.close} onClick={() => closeCard()}></button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function createDivTempTime(time, tempValue, feelsLike) {\r\n        return (\r\n            <div className={style.time}>\r\n                <div className={style.medi}> {time} </div>\r\n                <div className={style.semi}> {convertTemp(unitName, tempValue)} </div>\r\n                <span> feels like </span>\r\n                <div className={style.semi}> {convertTemp(unitName, feelsLike)} </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            { isOpenCard\r\n                ? <>\r\n                    {createCardDay(id)}\r\n                </>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default CardDay","import React from 'react'\r\nimport { convertTemp, formatDate, getSrc } from \"../helpers/Helpers\"\r\n\r\nimport style from \"./ForecastContainer.module.css\"\r\n\r\n\r\nconst ListDay = ({ clickDay, unitName, dataForecast }) => {\r\n\tlet days = dataForecast.daily\r\n\r\n\tfunction dayList() {\r\n\t\treturn days.map((day, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div onClick={() => clickDay(index)} key={day.dt} className={style.dayWrapper}>\r\n\t\t\t\t\t<div className={style.day}>\r\n\t\t\t\t\t\t<span className={style.dayDate}> {formatDate(day.dt, dataForecast)}  </span>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img className={style.iconMini} src={getSrc(\"mini-icons\", day.weather[0].icon)} alt=\"iconMini\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{convertTemp(unitName, day.temp.day)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{dataForecast.daily\r\n\t\t\t\t? <>\r\n\t\t\t\t\t<h2 className={style.title}>8-day Forecast </h2>\r\n\t\t\t\t\t<div className={style.dayList}>\r\n\t\t\t\t\t\t{dayList()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default ListDay","import React, { useState } from 'react'\r\nimport Error from \"../error/Error\"\r\nimport Spinner from \"../spinner/Spinner\"\r\nimport CardDay from \"./CardDay\"\r\nimport ListDay from \"./ListDay\"\r\n\r\nimport style from \"./ForecastContainer.module.css\"\r\n\r\n\r\nconst ForecastContainer = ({ dataForecast, unitName }) => {\r\n\tlet [isOpenCard, setIsOpenCard] = useState(false)\r\n\tlet [id, setId] = useState(null)\r\n\r\n\tfunction clickDay(id) {\r\n\t\tsetIsOpenCard(true)\r\n\t\tsetId(id)\r\n\t}\r\n\r\n\tfunction closeCard() {\r\n\t\tsetIsOpenCard(false)\r\n\t\tsetId(null)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.wrapperForecast}>\r\n\r\n\t\t\t<ListDay id={id} dataForecast={dataForecast} unitName={unitName} clickDay={clickDay} />\r\n\r\n\t\t\t<CardDay id={id} dataForecast={dataForecast} unitName={unitName} isOpenCard={isOpenCard} closeCard={closeCard} />\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ForecastContainer\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst OwmServiceContex = React.createContext()\r\nexport default OwmServiceContex","import React from 'react'\r\nimport OwmServiceContex from \"../owmServiceContex/OwmServiceContex\"\r\n\r\nconst WithOwmService = () => {\r\n    return (Wrapped) => {\r\n        return (props) => {\r\n            return (\r\n                <OwmServiceContex.Consumer>\r\n                    { (OwmService) => {\r\n                        return <Wrapped {...props} OwmService={OwmService} />\r\n                    }}\r\n                </OwmServiceContex.Consumer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default WithOwmService\r\n// const withOwmService = (Component) => {\r\n//     const WrappedComponent = (props) => {\r\n//         return (\r\n//             <OwmServiceContex.Consumer>\r\n//                 {(OwmService) => {\r\n//                     return <Component {...props} OwmService={OwmService} />\r\n//                 }}\r\n//             </OwmServiceContex.Consumer>\r\n//         )\r\n//     }\r\n//     return WrappedComponent\r\n// }\r\n\r\n","export default __webpack_public_path__ + \"static/media/search.595d4dfb.svg\";","import React, { useState } from 'react'\r\nimport CurrentWeather from \"../CurrentWeather/CurrentWeather\"\r\nimport ForecastContainer from \"../Forecast/ForecastContainer\"\r\nimport { connect } from \"react-redux\"\r\nimport WithOwmService from \"../hoc/WithOwmService\"\r\nimport {\r\n    dataReceivedWeather, dataError, dataLoading,\r\n    setCity, dataReceivedForecast\r\n} from \"../../redux/weather/actions\"\r\n\r\nimport style from \"./WeatherContainer.module.css\"\r\nimport search from \"../../images/search.svg\"\r\n\r\nconst WeatherContainer = (props) => {\r\n    let { OwmService, dataReceivedWeather, dataError,\r\n        dataLoading, setCity, dataReceivedForecast,\r\n        dataWeather, dataForecast, city, unit, error, loading } = props\r\n\r\n    const [unitName, setUnitName] = useState(unit)\r\n\r\n    function getWeather(event) {\r\n        event.preventDefault()\r\n        if (city.length === 0) {\r\n            dataReceivedWeather({})\r\n            return dataError(true)\r\n        }\r\n        dataError(false)\r\n        dataLoading(true)\r\n\r\n        fetchWeather()\r\n        setCity(\"\")\r\n    }\r\n\r\n    async function fetchWeather() {\r\n        //кодер для правильных запросов (изменяет \"неправильные\" символы)\r\n        const uriEncodedCity = encodeURIComponent(city)\r\n        //для безопасности своего АПИключа, когда выложишь на гитхаб\r\n        const API_KEY = process.env.REACT_APP_API_KEY\r\n\r\n        await OwmService.getCurrentWeather(unit, uriEncodedCity, API_KEY)\r\n            .then((response) => {\r\n                if (response.cod !== 200) {\r\n                    throw new Error()\r\n                }\r\n                dataReceivedWeather(response)\r\n                getForecast(response.coord.lat, response.coord.lon)\r\n                dataLoading(false)\r\n                dataError(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dataLoading(false)\r\n                dataError(true)\r\n            })\r\n    }\r\n\r\n\r\n    function fetchForecast(unit, lat, lon) {\r\n        const API_KEY = process.env.REACT_APP_API_KEY\r\n        OwmService.getForecast8Days(unit, lat, lon, API_KEY)\r\n            .then(response => {\r\n                dataReceivedForecast(response)\r\n                dataLoading(false)\r\n            })\r\n            .catch(error => {\r\n                dataError(true)\r\n                dataLoading(false)\r\n                console.log(error.status)\r\n            })\r\n    }\r\n\r\n    function getForecast(lat, lon) {\r\n        if (!lat && !lon) {\r\n            dataReceivedForecast({})\r\n            return dataError(true)\r\n        }\r\n        dataError(false)\r\n        dataLoading(true)\r\n\r\n        fetchForecast(unit, lat, lon)\r\n    }\r\n\r\n    function createInput(name, title) {\r\n        return (\r\n            <div className={style.divRadio}>\r\n                <input className={style.radio}\r\n                    type=\"radio\"\r\n                    name=\"units\"\r\n                    checked={unitName === name}\r\n                    value={name}\r\n                    id={name}\r\n                    onChange={(e) => setUnitName(e.target.value)} />\r\n                <label className={style.label} htmlFor={name}> <span> {title} </span> </label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={style.weather}>\r\n            <form className={style.weatherForm} onSubmit={getWeather}>\r\n                <div className={style.inputWrapper}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search City\"\r\n                        maxLength=\"50\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)} />\r\n                    <img src={search} alt=\"search\" />\r\n                </div>\r\n\r\n                <button className={style.buttonSubmit} type=\"submit\">Search</button>\r\n\r\n                <div className={style.wrapperRadio}>\r\n                    {createInput(\"metric\", \"°C\")}\r\n                    {createInput(\"imperial\", \"°F\")}\r\n                </div>\r\n            </form>\r\n\r\n            <CurrentWeather dataWeather={dataWeather} unitName={unitName} loading={loading} error={error} />\r\n            <ForecastContainer dataForecast={dataForecast} unitName={unitName} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.weather,\r\n        dataWeather: state.weather.dataWeather,\r\n        dataForecast: state.weather.dataForecast,\r\n        city: state.weather.city,\r\n        unit: state.weather.unit,\r\n        error: state.weather.error,\r\n        loading: state.weather.loading,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dataReceivedWeather, dataError, dataLoading,\r\n    setCity, dataReceivedForecast\r\n}\r\n\r\nexport default WithOwmService()(connect(mapStateToProps, mapDispatchToProps)(WeatherContainer))\r\n","const dataReceivedWeather = (newData) => {\r\n    return {\r\n        type: \"DATA_RECEIVED_WEATHER\",\r\n        payload: newData\r\n    }\r\n}\r\nconst dataError = (newError) => {\r\n    return {\r\n        type: \"DATA_ERROR\",\r\n        error: newError\r\n    }\r\n}\r\nconst dataLoading = (newLoading) => {\r\n    return {\r\n        type: \"DATA_LOADING\",\r\n        loading: newLoading\r\n\r\n    }\r\n}\r\nconst setCity = (newCity) => {\r\n    return {\r\n        type: \"SET_CITY\",\r\n        city: newCity\r\n    }\r\n}\r\n\r\nconst dataReceivedForecast = (newData) => {\r\n    return {\r\n        type: \"DATA_RECEIVED_FORECAST\",\r\n        payload: newData\r\n    }\r\n\r\n}\r\n// const addCardDayForecast = (newId) => {\r\n//     return {\r\n//         type: \"ADD_CARD_DAY_FORECAST\",\r\n//         id: newId\r\n//     }\r\n// }\r\n\r\nexport {\r\n    dataReceivedWeather, dataError, dataLoading,\r\n    setCity, dataReceivedForecast,\r\n    //  addCardDayForecast\r\n}","import React from 'react'\nimport AppHeader from './components/AppHeader/AppHeader'\nimport AppFooter from './components/AppFooter/AppFooter'\nimport WeatherContainer from \"./components/WeatherContainer/WeatherContainer\"\n\nimport \"./App.css\"\n\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"mainWrapper\">\n\t\t\t<AppHeader />\n\n\t\t\t<WeatherContainer />\n\n\t\t\t<AppFooter />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\r\nimport Error from \"../error/Error\"\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <Error />\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}","export default class OwmService {\r\n    constructor() {\r\n        this._baseUrl = \"https://api.openweathermap.org\"\r\n    }\r\n    //main func fetch\r\n    async getResources(url) {\r\n        const response = await fetch(`${this._baseUrl}${url}`)\r\n        // console.log(`${this._baseUrl}${url}`)\r\n        if (!response.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${response.status}`)\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n    //get weather\r\n    getCurrentWeather(unit, city, apikey) {\r\n        return this.getResources(`/data/2.5/weather?&units=${unit}&q=${city}&appid=${apikey}`)\r\n    }\r\n\r\n    //forecast 8-days\r\n    getForecast8Days(unit, lat, lon, apikey) {\r\n        return this.getResources(`/data/2.5/onecall?lat=${lat}&lon=${lon}&units=${unit}&exclude=current,minutely,hourly&appid=${apikey}`)\r\n    }\r\n\r\n}\r\n\r\n","const initialState = {\r\n    dataWeather: {},\r\n    dataForecast: {},\r\n    unit: \"metric\",\r\n    city: \"\",\r\n    error: false,\r\n    loading: false,\r\n}\r\n\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"DATA_RECEIVED_WEATHER\":\r\n            return {\r\n                ...state, dataWeather: action.payload\r\n            }\r\n        case \"DATA_RECEIVED_FORECAST\":\r\n            return {\r\n                ...state, dataForecast: action.payload\r\n            }\r\n        // case \"ADD_CARD_DAY_FORECAST\":\r\n        //     const id = action.id\r\n        //     const item = state.menu.find(item => item.id === id)\r\n        //     const newItem = {\r\n        //         title: item.title,\r\n        //         url: item.url,\r\n        //         // etc...\r\n        //     }\r\n        //     return {\r\n        //         ...state,\r\n        //         item: [\r\n        //             ...state.items,\r\n        //             newItem\r\n        //         ]\r\n        //     }\r\n        case \"DATA_ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        case \"DATA_LOADING\":\r\n            return {\r\n                ...state, loading: action.loading\r\n            }\r\n        case \"SET_CITY\":\r\n            return {\r\n                ...state, city: action.city\r\n            }\r\n        case \"SET_LAT\":\r\n            return {\r\n                ...state, lat: action.lat\r\n            }\r\n        case \"SET_LON\":\r\n            return {\r\n                ...state, lon: action.lon\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default weatherReducer","import { combineReducers } from \"redux\"\r\nimport weatherReducer from \"./weather/reducer\"\r\n\r\nexport default combineReducers({\r\n    weather: weatherReducer,\r\n})","import { createStore } from \"redux\"\r\nimport reducer from \"./reducer\"\r\n\r\nconst store = createStore(reducer)\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ErrorBoundary from \"./components/errorBoundary/ErrorBoundary\"\nimport OwmService from \"./services/OwmService\"\nimport OwmServiceContex from \"./components/owmServiceContex/OwmServiceContex\"\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nconst ownService = new OwmService()\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<OwmServiceContex.Provider value={ownService}>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<App />\n\t\t\t\t\t</Router>\n\t\t\t\t</OwmServiceContex.Provider>\n\t\t\t</ErrorBoundary>\n\t\t</Provider>\n\n\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CurrentWeather_wrapper__2AeIO\",\"left\":\"CurrentWeather_left__1h7mM\",\"right\":\"CurrentWeather_right__4bg5r\",\"date\":\"CurrentWeather_date__2koQ0\",\"city\":\"CurrentWeather_city__3ezDR\",\"feelsLike\":\"CurrentWeather_feelsLike__3V6KL\",\"wph\":\"CurrentWeather_wph__2yrCz\",\"descr\":\"CurrentWeather_descr__3tFwf\",\"tempDegrees\":\"CurrentWeather_tempDegrees__BAtVt\",\"icon\":\"CurrentWeather_icon__2Uh0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"WeatherContainer_weather__Sfppc\",\"weatherForm\":\"WeatherContainer_weatherForm__29QMP\",\"inputWrapper\":\"WeatherContainer_inputWrapper__2VNKC\",\"buttonSubmit\":\"WeatherContainer_buttonSubmit__3oVM6\",\"wrapperRadio\":\"WeatherContainer_wrapperRadio__3Bfij\",\"divRadio\":\"WeatherContainer_divRadio__GrLB5\"};"],"sourceRoot":""}